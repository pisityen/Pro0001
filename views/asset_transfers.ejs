<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Transfer Asset</title>

  <!-- CSS -->
  <link rel="stylesheet" href="/css/bar.css" />
  <link rel="stylesheet" href="/css/styles.css" />

  <!-- Bootstrap 5.3 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
  <div class="main-container d-flex">

       <!-- Sidebar -->
      <div class="sidebar bg-dark text-white vh-100 d-flex flex-column" id="side_nav">
        <!-- ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô Sidebar -->
        <div class="header-box px-3 pt-3 pb-4 d-flex justify-content-between align-items-center">
          <h1 class="fs-5 text-uppercase">
            <span class="bg-white text-dark rounded shadow px-2 me-2">IT</span>
            <span class="text-white">Management</span>
          </h1>
        </div>
        <ul class="list-unstyled px-2">
          <li class="mb-2">
          <% if (role === 'admin') { %><a href="/dashboard" class="text-decoration-none px-3 py-3 d-block rounded text-white active-link">Dashboard</a><% } %>
          </li>
          <% if (role === 'admin') { %><li class="mb-2"><a href="/asset_management" class="text-decoration-none px-3 py-3 d-block rounded text-white active-link">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô</a></li><% } %>
          <li class="mb-2"><a href="/asset_requests" class="text-decoration-none px-3 py-3 d-block rounded text-white active-link">‡πÄ‡∏ö‡∏¥‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô</a></li>
          <li class="mb-2"><a href="/all_transfers" class="text-decoration-none px-3 py-3 d-block rounded text-white active-link">‡πÇ‡∏≠‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô</a></li>
            <% if (role === 'admin') { %><a href="/account" class="text-decoration-none px-3 py-3 d-block rounded text-white active-link">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</a><% } %></li>
        </ul>
        <div class="mt-auto px-2 pb-3 text-center">
          <div class="text-white mb-2">
            User : <%= user_name %>
          </div>
          <div class="text-white mb-2">
            Role : <%= role %>
          </div>
          <a href="/logout" class="btn btn-danger text-decoration-none px-3 py-2 w-100">
            <i class="fas fa-sign-out-alt me-2"></i> Logout
          </a>
        </div>
      </div>
  
        <!-- //‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏´‡∏•‡∏±‡∏Å// -->
    <div class="content flex-fill">
      <!-- ‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏ô (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ Navbar ‡∏´‡∏£‡∏∑‡∏≠ Title) -->
      <nav class="navbar navbar-light bg-light px-3">
        <div class="container-fluid">
          <h2 class="navbar-brand fs-5">Transfer Asset</h2>
        </div>
      </nav>

      <div class="container mt-4">
        <h3>‡πÇ‡∏≠‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ö‡∏á‡∏≤‡∏ô: <%= req_asset_id %>
        </h3>
        <p>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏Ç‡∏≠</p>
        <% items.forEach(item=> { %>
        <h5>
          <%= item.item_name %> (x <%= item.item_quantity %>)
        </h5>
        <% }) %>

        <div id="itemsContainer">
            <!-- ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (item_name, item_quantity) -->
            
          </div>

        <!-- ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÇ‡∏≠‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô -->
        <form id="transferForm">
          <!-- ‡∏ã‡πà‡∏≠‡∏ô req_asset_id ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô hidden input -->
          <input type="hidden" id="req_asset_id" value="<%= req_asset_id %>">

          <!-- üîÑ Input ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πÅ‡∏Å‡∏ô QR ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå AS -->
          <div class="mb-3">
            <label for="scanInput" class="form-label">‡∏™‡πÅ‡∏Å‡∏ô / ‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô:</label>
            <input type="text" id="scanInput" data-expected="<% items.forEach(item=> { %><%= item.item_quantity %><% }) %>" class="form-control" placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏¥‡∏á QR ‡πÅ‡∏•‡πâ‡∏ß Enter" autofocus>
          </div>

          <!-- ‚úÖ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ -->
          <p class="text-primary" id="scanCount">‡∏™‡πÅ‡∏Å‡∏ô‡πÅ‡∏•‡πâ‡∏ß: 0</p>
          <ul id="scannedList" class="list-group mb-3 "></ul>

          <div class="mb-3">
            <label for="reason" class="form-label">‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô:</label>
            <textarea id="reason" class="form-control"></textarea>
          </div>

          <button type="submit" class="btn btn-primary">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô</button>
        </form>
      </div>
    </div>
    <!-- End Main Content -->

  </div>
  <!-- End main-container -->

  <script>

  const scannedAS = [];
  const scanInput = document.getElementById('scanInput');
  const listContainer = document.getElementById('scannedList');
  const scanCountText = document.getElementById('scanCount');

  // ‡∏ï‡∏±‡πâ‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏™‡πÅ‡∏Å‡∏ô (‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å server)
  const totalRequired = parseInt(document.getElementById('scanInput').getAttribute('data-expected')) || 0;

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
  function updateScanCount() {
    scanCountText.textContent = `‡∏™‡πÅ‡∏Å‡∏ô‡πÅ‡∏•‡πâ‡∏ß: ${scannedAS.length}`;
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
  function addScannedAsset(data, assetNumber) {
    const li = document.createElement('li');
    li.className = 'list-group-item';

    li.innerHTML = `
      <div class="d-flex justify-content-between align-items-start">
        <div>
          <strong>${assetNumber}</strong><br>
          <small>‡∏ä‡∏∑‡πà‡∏≠: ${data.as_name || '-'}</small><br>
          <small>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: ${data.as_category || '-'}</small><br>
          <small>Serial: ${data.as_serial_number || '-'}</small>
        </div>
        <button class="btn btn-sm btn-danger">‡∏•‡∏ö</button>
      </div>
    `;

    // ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö
    const delBtn = li.querySelector('button');
    delBtn.onclick = () => {
      scannedAS.splice(scannedAS.indexOf(assetNumber), 1);
      listContainer.removeChild(li);
      updateScanCount();
    };

    listContainer.appendChild(li);
    updateScanCount();
  }

  // Event: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î Enter ‡∏ö‡∏ô input
  scanInput.addEventListener('keydown', function (e) {
    if (e.key === 'Enter') {
      e.preventDefault();
      const value = this.value.trim();

      if (!value) return;

      // ‡∏ï‡∏£‡∏ß‡∏à AS ‡∏ã‡πâ‡∏≥
      if (scannedAS.includes(value)) {
        Swal.fire({
          icon: 'warning',
          title: '‡∏ã‡πâ‡∏≥!',
          text: `‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô ${value} ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß`,
        });
        this.value = '';
        return;
      }

      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡∏à‡∏≤‡∏Å API
      fetch(`/assets/api/assets/${value}`)
        .then(res => {
          if (!res.ok) throw new Error(`‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô ${value}`);
          return res.json();
        })
        .then(data => {
          scannedAS.push(value);
          addScannedAsset(data, value);
          scanInput.value = '';
        })
        .catch(err => {
          Swal.fire({
            icon: 'error',
            title: '‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
            text: err.message
          });
          scanInput.value = '';
        });
    }
  });






    document.getElementById('transferForm').addEventListener('submit', function (e) {
      e.preventDefault();

      const req_asset_id = document.getElementById('req_asset_id').value.trim();
      const reason = document.getElementById('reason').value.trim();

      if (scannedAS.length === 0) {
        return Swal.fire({
          icon: 'warning',
          title: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
          text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πÅ‡∏Å‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
        });
      }

      // payload ‡πÅ‡∏ö‡∏ö items = { "item_id": [AS1, AS2] }
      const items = { manual: scannedAS }; // ‡πÉ‡∏™‡πà key item_id ‡∏õ‡∏•‡∏≠‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤ manual ‡∏Å‡πá‡∏û‡∏≠

      fetch('/api/asset_transfers/multiple', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ req_asset_id, reason, items })
      })
        .then(async res => {
          const data = await res.json();
          if (!res.ok) {
            return Swal.fire({
              icon: 'error',
              title: '‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
              text: data.error || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
            });
          }
          Swal.fire({
            icon: 'success',
            title: '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
            text: data.message,
          }).then(() => window.location.reload());
        })
        .catch(err => {
          console.error(err);
          Swal.fire({
            icon: 'error',
            title: '‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
            text: err.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ',
          });
        });
    });

  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>