<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Transfer Asset</title>
  <link rel="stylesheet" href="/css/bar.css" />
  <link rel="stylesheet" href="/css/styles.css" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
  <div class="main-container d-flex">
    <!-- Sidebar (โค้ดเดิม) -->
    <div class="sidebar bg-dark text-white vh-100 d-flex flex-column" id="side_nav">
        <div class="header-box px-3 pt-3 pb-4 d-flex justify-content-between align-items-center">
            <h1 class="fs-5 text-uppercase">
                <span class="bg-white text-dark rounded shadow px-2 me-2">IT</span>
                <span class="text-white">Management</span>
            </h1>
        </div>
        <ul class="list-unstyled px-2">
            <% if (role === 'admin') { %>
                <li class="mb-2"><a href="/dashboard" class="text-decoration-none px-3 py-3 d-block rounded text-white">Dashboard</a></li>
                <li class="mb-2"><a href="/asset_management" class="text-decoration-none px-3 py-3 d-block rounded text-white">ข้อมูลทรัพย์สิน</a></li>
            <% } %>
            <li class="mb-2"><a href="/asset_requests" class="text-decoration-none px-3 py-3 d-block rounded text-white">เบิกทรัพย์สิน</a></li>
            <li class="mb-2"><a href="/all_transfers" class="text-decoration-none px-3 py-3 d-block rounded text-white active-link">โอนทรัพย์สิน</a></li>
            <% if (role === 'admin') { %>
                <li class="mb-2"><a href="/account" class="text-decoration-none px-3 py-3 d-block rounded text-white">ข้อมูลผู้ใช้งาน</a></li>
            <% } %>
        </ul>
        <div class="mt-auto px-2 pb-3 text-center">
            <div class="text-white mb-2">User : <%= user_name %></div>
            <div class="text-white mb-2">Role : <%= role %></div>
            <a href="/logout" class="btn btn-danger text-decoration-none px-3 py-2 w-100"><i class="fas fa-sign-out-alt me-2"></i> Logout</a>
        </div>
    </div>

    <!-- Main Content -->
    <div class="content flex-grow-1 p-4 bg-light">
      <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h3><i class="fas fa-exchange-alt me-2"></i> โอนทรัพย์สินสำหรับใบงาน: <%= request.req_asset_id %></h3>
            <a href="/asset_requests" class="btn btn-secondary">กลับไปหน้ารายการใบเบิก</a>
        </div>
        <p class="lead">ผู้ขอเบิก: <strong><%= request.req_user_name %></strong> (<%= request.req_reason %>)</p>
        <hr>

        <!-- ฟอร์มหลัก -->
        <form id="transferForm">
          <input type="hidden" id="req_asset_id" value="<%= request.req_asset_id %>">
          
          <% if (items && items.length > 0) { %>
            <div class="row">
            <% items.forEach(item => { %>
              <!-- *** จุดที่แก้ไข: เปลี่ยนคลาสเพื่อให้ Layout ยืดหยุ่นขึ้น *** -->
              <div class="col-lg-4 col-md-6 mb-4">
                <div class="card h-100 shadow-sm">
                  <div class="card-header bg-white">
                    <h5 class="card-title mb-0"><%= item.item_name %></h5>
                    <small class="text-muted">ต้องโอนทั้งหมด <span class="fw-bold"><%= item.item_quantity_approved %></span> ชิ้น</small>
                  </div>
                  <div class="card-body">
                    <div class="mb-3">
                      <label for="scan_<%= item.item_id %>" class="form-label">สแกนหมายเลขทรัพย์สิน (<%= item.item_name %>):</label>
                      <input type="text" 
                             class="form-control scan-input" 
                             id="scan_<%= item.item_id %>" 
                             data-item-id="<%= item.item_id %>"
                             data-item-name="<%= item.item_name %>"
                             data-required-qty="<%= item.item_quantity_approved %>"
                             placeholder="ยิง QR หรือพิมพ์แล้ว Enter">
                    </div>
                    <p id="count_<%= item.item_id %>" class="text-primary scan-count">สแกนแล้ว: 0 / <%= item.item_quantity_approved %></p>
                    <ul id="list_<%= item.item_id %>" class="list-group scanned-list"></ul>
                  </div>
                </div>
              </div>
            <% }) %>
            </div>
          <% } else { %>
            <div class="alert alert-warning">ไม่พบรายการที่ได้รับการอนุมัติสำหรับใบเบิกนี้</div>
          <% } %>

          <div class="card mt-4 shadow-sm">
            <div class="card-body">
              <div class="mb-3">
                <label for="reason" class="form-label">เหตุผลประกอบการโอน (ถ้ามี):</label>
                <textarea id="reason" class="form-control" rows="2"></textarea>
              </div>
              <button type="submit" class="btn btn-success w-100" <%= (items && items.length > 0) ? '' : 'disabled' %>>
                <i class="fas fa-check-circle me-2"></i> ยืนยันการโอนทั้งหมด
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const scannedItems = {}; // { item_id: [AS001, AS002], ... }
      const allScanInputs = document.querySelectorAll('.scan-input');

      // --- ฟังก์ชันสำหรับอัปเดต UI ของแต่ละ Card ---
      function updateCardUI(itemId, requiredQty) {
        const list = document.getElementById(`list_${itemId}`);
        const countEl = document.getElementById(`count_${itemId}`);
        const currentScanned = scannedItems[itemId] || [];
        
        countEl.textContent = `สแกนแล้ว: ${currentScanned.length} / ${requiredQty}`;
        list.innerHTML = ''; // Clear and redraw
        
        currentScanned.forEach(asset => {
          const li = document.createElement('li');
          li.className = 'list-group-item list-group-item-action py-2';
          li.innerHTML = `
            <div class="d-flex justify-content-between align-items-center">
              <div>
                <strong class="text-success">${asset.as_asset_number}</strong>
                <small class="d-block text-muted">${asset.as_name} (${asset.as_serial_number})</small>
              </div>
              <button type="button" class="btn btn-sm btn-outline-danger remove-btn" data-item-id="${itemId}" data-as-number="${asset.as_asset_number}">&times;</button>
            </div>
          `;
          list.appendChild(li);
        });
      }

      // --- Event Listener สำหรับ Input ทุกช่อง ---
      allScanInputs.forEach(input => {
        const itemId = input.dataset.itemId;
        const itemName = input.dataset.itemName;
        const requiredQty = parseInt(input.dataset.requiredQty);

        // Initialize scannedItems object
        if (!scannedItems[itemId]) {
          scannedItems[itemId] = [];
        }

        input.addEventListener('keydown', function (e) {
          if (e.key !== 'Enter') return;
          e.preventDefault();

          const assetNumber = this.value.trim();
          if (!assetNumber) return;

          // Check if already reached required quantity for this item
          if (scannedItems[itemId].length >= requiredQty) {
            Swal.fire('ครบแล้ว', `สแกน ${itemName} ครบ ${requiredQty} ชิ้นแล้ว`, 'info');
            this.value = '';
            return;
          }

          // Check for duplicates across all scanned items
          const isDuplicate = Object.values(scannedItems).flat().some(asset => asset.as_asset_number === assetNumber);
          if (isDuplicate) {
            Swal.fire('ซ้ำ', `หมายเลขทรัพย์สิน ${assetNumber} ถูกสแกนไปแล้ว`, 'warning');
            this.value = '';
            return;
          }

          // Fetch asset details to validate
          fetch(`/assets/api/assets/${assetNumber}`)
            .then(res => {
                if (!res.ok) throw new Error(`ไม่พบทรัพย์สินหมายเลข ${assetNumber}`);
                return res.json();
            })
            .then(data => {
                // *** จุดสำคัญ: ตรวจสอบว่าประเภทตรงกับที่ขอหรือไม่ ***
                if (data.as_category !== itemName) {
                    throw new Error(`ทรัพย์สินนี้เป็นประเภท "${data.as_category}" ไม่ใช่ "${itemName}"`);
                }
                scannedItems[itemId].push(data); // Store the whole data object
                updateCardUI(itemId, requiredQty);
                this.value = '';
            })
            .catch(err => {
                Swal.fire('ผิดพลาด', err.message, 'error');
                this.value = '';
            });
        });
      });

      // --- Event Listener สำหรับปุ่มลบ (Event Delegation) ---
      document.querySelector('.content').addEventListener('click', function(e) {
          if (e.target.classList.contains('remove-btn')) {
              const itemId = e.target.dataset.itemId;
              const assetNumber = e.target.dataset.asNumber;
              const requiredQty = parseInt(document.getElementById(`scan_${itemId}`).dataset.requiredQty);

              scannedItems[itemId] = scannedItems[itemId].filter(asset => asset.as_asset_number !== assetNumber);
              updateCardUI(itemId, requiredQty);
          }
      });

      // --- Event Listener สำหรับ Submit ฟอร์มหลัก ---
      document.getElementById('transferForm').addEventListener('submit', function (e) {
        e.preventDefault();

        // Validate if all required items are scanned
        let isComplete = true;
        document.querySelectorAll('.scan-input').forEach(input => {
            const itemId = input.dataset.itemId;
            const requiredQty = parseInt(input.dataset.requiredQty);
            if ((scannedItems[itemId]?.length || 0) !== requiredQty) {
                isComplete = false;
            }
        });

        if (!isComplete) {
            return Swal.fire('ยังไม่ครบ', 'กรุณาสแกนทรัพย์สินให้ครบทุกรายการตามจำนวนที่อนุมัติ', 'warning');
        }

        const req_asset_id = document.getElementById('req_asset_id').value;
        const reason = document.getElementById('reason').value.trim();
        
        // ** สร้าง Payload รูปแบบใหม่ **
        const payloadItems = {};
        for (const itemId in scannedItems) {
            payloadItems[itemId] = scannedItems[itemId].map(asset => asset.as_asset_number);
        }

        fetch('/api/asset_transfers/multiple', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ req_asset_id, reason, items: payloadItems })
        })
        .then(res => res.json().then(data => ({ ok: res.ok, data })))
        .then(({ ok, data }) => {
          if (!ok) throw new Error(data.error || 'เกิดข้อผิดพลาดในการสร้างใบโอน');
          Swal.fire('สำเร็จ!', data.message, 'success').then(() => window.location.href = '/all_transfers');
        })
        .catch(err => {
          Swal.fire('เกิดข้อผิดพลาด', err.message, 'error');
        });
      });
    });
  </script>
</body>
</html>
